// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
// ------------------------------------------------------------------------------------------------- module
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
// --                                                                                                    --
// --                                                                                                    --
// --             "esp8266_test"                                                                         --
// --                                                                                                    --
// --                                                                                                    --
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
// ---------------------------------------------------------------------------------------------- component
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
// --                                                                                                    --
// --                                                                                                    --
// -- title       : esp8266_test                                                                         --
// -- version     : 2.0                                                                                  --
// -- framework   : arduino                                                                              --
// -- author      : goldobin a.                                                                          --
// -- company     : cardboard.ru                                                                         --
// -- data        : 08/09/2022                                                                           --
// --                                                                                                    --
// --                                                                                                    --
// -- description :                                                                                      --
// --                                                                                                    --
// --                                                                                                    --
// --             (1) ОДНОВРЕМЕННОЕ выполнение трёх задач                                                --
// --                 каждой задаче соответствует отдельный файл                                         --
// --                                                                                                    --
// --                 blink.cpp    - непрерывная световая сигнализация                                   --
// --                 keypress.cpp - контроль нажатия встроенной кнопки                                  --
// --                 timescan.cpp - периодический вывод в UART значения времени                         --
// --                                                                                                    --
// --             (2) СИГНАЛИЗАЦИЯ используется единственный встроенный светодиод LED_BUILTIN            --
// --                                                                                                    --
// --                 бесконечно исполняемый цикл описывается таблицей                                   --
// --                 Интервал        LED_BUILTIN                                                        --
// --                 20 мс           HIGH                                                               --
// --                 300 мс          LOW                                                                --
// --                 20 мс           HIGH                                                               --
// --                 300 мс          LOW                                                                --
// --                 500 мс          HIGH                                                               --
// --                 500 мс          LOW                                                                --
// --                 500 мс          HIGH                                                               --
// --                 500 мс          LOW                                                                --
// --                                                                                                    --
// --             (3) ВСТРОЕННАЯ КНОПКА "FLASH" используются для контроля нажатия.                       --
// --                 она подключена к земле GPIO0. её можно использовать как обычную кнопку.            --
// --                 если программно подтянуть вывод GPIO0 с помощью внутреннего подтягивающего         --
// --                 резистора к высокому уровню, то появление LOW на этом выводе означает НАЖАТИЕ.     --
// --                                                                                                    --
// --                 при коротком нажатии - в UART выводится строка "short"                             --
// --                 при долгом нажатии   - в UART выводится строка "long"                              --
// --                                                                                                    --
// --                 справка о полезном контакте контроллера/платы для кнопки "FLASH"                   --
// --                 15 (IO0, GPIO0, SPICS2) - в режиме INPUT_PULLUP                                    --
// --                                                                                                    --
// --             (4) КОНТРОЛЬ ВРЕМЕНИ исполняются непрерывно. через каждые 3 сек. выполняется алгоритм  --
// --                 ШАГ 1 : устанавливается соединение в сети WiFi           исполняется однократно    --
// --                 ШАГ 2 : запрашивается значение времени по NTP            исполняется периодически  --
// --                 ШАГ 3 : значение времени выводится в UART в виде строки  исполняется периодически  --
// --                                                                                                    --
// --             (5) ФАЙЛЫ, сопряжённые с проектом                                                      --
// --                 esp8266_test.h - заголовок, объявление функций и макроопределений проекта          --
// --                 main.cpp       - корневой исполняемый файл, содержит функции-процессы setup, loop  --
// --                 blink.cpp      - исполняемый файл, содержит функцию blink                          --
// --                 keypress.cpp   - исполняемый файл, содержит функцию keypress                       --
// --                 timescan.cpp   - исполняемый файл, содержит функцию timescan                       --
// --                                                                                                    --
// --             (6) БИБЛИОТЕКИ, сопряжённые с проектом                                                 --
// --                                                                                                    --
// --             (7) МЕТОДЫ, которые вызываются из сопряжённых с проектом библиотек                     --
// --                 начальная настройка модуля UART                               Serial.begin         --
// --                                                                                                    --
// --                 вывод строки в UART                                           Serial.println       --
// --                 вывод символов в UART                                         Serial.print         --
// --                 начальная настройка модуля WIFI                               WiFi.mode            --
// --                 отключение модуля WIFI                                        WiFi.disconnect      --
// --                 поиск активных точек подключения WIFI                         WiFi.scanNetworks    --
// --                                                                                                    --
// --                                                                                                    --
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
// --------------------------------------------------------------------------------------------------------
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

#include "esp8266_test.h"


///////////////////////////////////////////////////////////////////////////////
// ----------------------------------------------------------------------------
//                                                              ФУНКЦИЯ-ПРОЦЕСС
// начальная настройка                                                    setup
// ----------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////


void setup () 

{

  Serial.begin (9600) ;                                                         // МЕТОД Serial.begin : скорость 9600 бод

  // --------------------------------------------------------------------------
  // настройка контактов
  // --------------------------------------------------------------------------

  pinMode (LED_BUILTIN, OUTPUT) ;                                               // контакт LED_BUILTIN             - режим OUTPUT
  pinMode (15, INPUT_PULLUP) ;                                                  // контакт 15 (IO0, GPIO0, SPICS2) - режим INPUT_PULLUP

}


///////////////////////////////////////////////////////////////////////////////
// ----------------------------------------------------------------------------
//                                                              ФУНКЦИЯ-ПРОЦЕСС
// бесконечное исполнение                                                  loop
// ----------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////


void loop () 

{
  // put your main code here, to run repeatedly:
}